name: Build Bundled Android Debug APK

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci --legacy-peer-deps
        else
          npm install --legacy-peer-deps
        fi
        
    - name: Create Android assets directory
      run: mkdir -p android/app/src/main/assets
        
    - name: Bundle JavaScript for Android
      run: |
        npx react-native bundle \
          --platform android \
          --dev false \
          --entry-file index.js \
          --bundle-output android/app/src/main/assets/index.android.bundle \
          --assets-dest android/app/src/main/res
          
    - name: Verify bundle was created
      run: |
        if [ ! -f android/app/src/main/assets/index.android.bundle ]; then
          echo "Bundle file not found!"
          exit 1
        fi
        echo "Bundle created successfully:"
        ls -la android/app/src/main/assets/
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradlew executable
      run: chmod +x ./android/gradlew
      
    - name: Clean previous builds
      run: |
        cd android
        ./gradlew clean
        
    - name: Build Debug APK with bundled JS
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon --stacktrace
        
    - name: Verify APK exists
      run: |
        if [ ! -f android/app/build/outputs/apk/debug/app-debug.apk ]; then
          echo "APK file not found!"
          exit 1
        fi
        ls -la android/app/build/outputs/apk/debug/
        
    - name: Rename APK
      run: |
        cd android/app/build/outputs/apk/debug
        mv app-debug.apk Gameball-RN-Widget-Demo.apk
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: Gameball-RN-Widget-Demo
        path: android/app/build/outputs/apk/debug/Gameball-RN-Widget-Demo.apk
        retention-days: 30
        
    - name: Get APK info
      run: |
        APK_PATH="android/app/build/outputs/apk/debug/Gameball-RN-Widget-Demo.apk"
        APK_SIZE=$(stat -c%s "$APK_PATH" | numfmt --to=iec-i --suffix=B)
        BUNDLE_SIZE=$(stat -c%s "android/app/src/main/assets/index.android.bundle" | numfmt --to=iec-i --suffix=B)
        echo "APK Size: $APK_SIZE"
        echo "Bundle Size: $BUNDLE_SIZE"
        echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV
        echo "BUNDLE_SIZE=$BUNDLE_SIZE" >> $GITHUB_ENV
        
    - name: Comment PR with APK info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `📱 **Gameball-RN-Widget-Demo APK Built!**\n\n📦 **APK Size:** ${process.env.APK_SIZE}\n📄 **Bundle Size:** ${process.env.BUNDLE_SIZE}\n⬇️ **Download:** Check the artifacts section\n\n✅ *Ready for testing - no Metro server needed!*`
          });